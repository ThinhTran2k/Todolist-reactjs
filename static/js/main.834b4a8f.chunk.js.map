{"version":3,"sources":["components/TaskForm.js","components/Search.js","components/Sort.js","components/Control.js","components/TaskItem.js","components/Table.js","App.js","reportWebVitals.js","index.js"],"names":["TaskForm","props","onClose","onSubmit","e","preventDefault","state","onClear","id","name","status","this","console","log","className","onClick","type","value","onChange","currentText","target","setState","required","currentSelected","React","Component","Search","keyword","onchange","onSearch","placeholder","Sort","sortBy","sortValue","onSort","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","role","style","padding","Control","TaskItem","onUpdateStatus","task","onDelete","onUpdate","title","index","ListTable","onFilter","filterName","filterStatus","elm","tasks","map","data","idx","App","onDisplayForm","isDisplay","taskEditing","onOpenForm","onCloseForm","generateID","Boolean","push","findIndex","localStorage","setItem","JSON","stringify","onFindIndex","result","forEach","element","splice","TaskEditing","fltN","fltS","parseInt","filterNT","keyWord","data1","sort","by","getItem","parse","Math","floor","random","toString","substring","s4","res","filter","toLowerCase","indexOf","a","b","taskformEl","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.834b4a8f.chunk.js","sourcesContent":["import React from 'react';\r\nclass TaskForm extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            id: '',\r\n            name: '',\r\n            status: false,\r\n        };\r\n    }\r\n\r\n    // hàm đóng form\r\n    onClose = () => {\r\n        this.props.onClose()\r\n    }\r\n\r\n    // hàm gửi data cho cha khi submit\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n        this.onClear();\r\n        this.onClose();\r\n    }\r\n\r\n    // hàm clear ô input\r\n    onClear = () => {\r\n        this.props.onClear();\r\n    }\r\n\r\n    // lifecycle set data taskEditing vào task để hiển thị data taskEditing lên form\r\n    // hoạt động khi 1 sự kiện xảy ra lần đầu tiên (hay khi taskform đc gọi)\r\n    // componentDidMount() {\r\n    //     if (this.props.taskEditing){\r\n    //         this.setState({\r\n    //             id: this.props.taskEditing.id,\r\n    //             name: this.props.taskEditing.name,\r\n    //             status: this.props.taskEditing.status\r\n    //         });\r\n    //     }\r\n    // }\r\n\r\n    // lifecycle đc call ngay khi có sự thay đổi props sẽ return new state or null\r\n    // static getDerivedStateFromProps(props, state) {\r\n    //     // TH có taskEditing thì cập nhật form\r\n    //     if (props.taskEditing) {\r\n    //         if (props.taskEditing.id !== state.id) {\r\n    //             return {\r\n    //                 id: props.taskEditing.id,\r\n    //                 name: props.taskEditing.name,\r\n    //                 status: props.taskEditing.status\r\n    //             };\r\n    //         }\r\n    //         // TH ko có taskEditing thì reset form (khi click thêm mà form đã đc gọi trc đó)\r\n    //     } else if (!props.taskEditing) {\r\n    //         return {\r\n    //             id: '',\r\n    //             name: '',\r\n    //             status: false\r\n    //         }\r\n    //     }\r\n    //     return null\r\n    // }\r\n\r\n    render() {\r\n        const { id, name, status } = this.state;\r\n        console.log(' this.state', this.state)\r\n        return (\r\n            <div className=\"panel panel-warning\">\r\n                <div className=\"panel-heading d-flex justify-content-between align-items-center\">\r\n                    <h3 className=\"panel-title\">{id !== '' ? \"Cập nhật công việc\" : \"Thêm Công Việc\"}</h3>\r\n                    <button className=\"btn\" onClick={this.onClose}><i className=\"fas fa-times\"></i></button>\r\n                </div>\r\n                <div className=\"panel-body\">\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <label>Tên :</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"name\"\r\n                                value={name}\r\n                                onChange={(e)=>{\r\n                                    const currentText = e.target.value;\r\n                                    this.setState({ name: currentText });\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <label>Trạng Thái :</label>\r\n                        <select\r\n                            className=\"form-control\"\r\n                            required=\"required\"\r\n                            name=\"status\"\r\n                            value={status}\r\n                            onChange={(e) => {\r\n                                const currentSelected = e.target.value;\r\n                                this.setState({ status: currentSelected });\r\n                            }}\r\n                        >\r\n                            <option value={true}>Kích Hoạt</option>\r\n                            <option value={false}>Ẩn</option>\r\n                        </select>\r\n                        <br />\r\n                        <div className=\"text-center\">\r\n                            <button type=\"submit\" className=\"btn btn-warning\">Thêm</button>&nbsp;\r\n                            <button type=\"button\" className=\"btn btn-danger\" onClick={this.onClear}>Hủy Bỏ</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TaskForm;","import React from 'react';\r\nclass Search extends React.Component {\r\n    state = {\r\n        keyword: '',\r\n    }\r\n\r\n    onchange = (e) => {\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    onSearch = () => {\r\n        this.props.onSearch(this.state.keyword)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n                <div className=\"input-group\">\r\n                    <input type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Nhập từ khóa...\"\r\n                        name=\"keyword\"\r\n                        value={this.state.keyword}\r\n                        onChange={this.onchange}\r\n                    />\r\n                    <span className=\"input-group-btn\">\r\n                        <button className=\"btn btn-primary\" type=\"button\" onClick={this.onSearch}>\r\n                            <span className=\"fa fa-search mr-3\"></span>Tìm\r\n                            </button>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\nclass Sort extends React.Component {\r\n\r\n    \r\n\r\n    onClick = (sortBy,sortValue) => {\r\n        this.props.onSort(sortBy,sortValue);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n                <div className=\"dropdown\">\r\n                    <button className=\"btn btn-primary dropdown-toggle\"\r\n                        type=\"button\"\r\n                        id=\"dropdownMenu1\"\r\n                        data-toggle=\"dropdown\"\r\n                        aria-haspopup=\"true\"\r\n                        aria-expanded=\"true\">\r\n                        Sắp Xếp <span className=\"fa fa-caret-square-o-down ml-5\"></span>\r\n                    </button>\r\n                    <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\r\n                        <li onClick={ () => this.onClick('name',1) }>\r\n                            <a role=\"button\">\r\n                                <span className=\"fa fa-sort-alpha-asc p-2\">\r\n                                    Tên A-Z\r\n                        </span>\r\n                            </a>\r\n                        </li>\r\n                        <li onClick={() => this.onClick('name', -1)}>\r\n                            <a role=\"button\">\r\n                                <span className=\"fa fa-sort-alpha-desc p-2\">\r\n                                    Tên Z-A\r\n                          </span>\r\n                            </a>\r\n                        </li>\r\n                        <li role=\"separator\" className=\"divider\"></li>\r\n                        <li onClick={() => this.onClick('status', 1)} style={{padding: '5px'}}><a role=\"button\">Trạng Thái Kích Hoạt</a></li>\r\n                        <li onClick={() => this.onClick('status', -1)} style={{padding: '5px'}}><a role=\"button\">Trạng Thái Ẩn</a></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sort;","import React from 'react';\r\nimport Search from './Search';\r\nimport Sort from './Sort';\r\nclass Control extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"row mt-3\">\r\n                {/* search */}\r\n                <Search onSearch={this.props.onSearch} />\r\n                {/* sort */}\r\n                <Sort onSort={this.props.onSort}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Control;","import React from 'react';\r\nclass TaskItem extends React.Component {\r\n    // hàm truyền props cho cha khi click\r\n    onUpdateStatus = () => {\r\n        this.props.onUpdateStatus(this.props.task.id);\r\n    }\r\n\r\n    onDelete = () => {\r\n        this.props.onDelete(this.props.task.id);\r\n    }\r\n\r\n    onUpdate = () => {\r\n        this.props.onUpdate(this.props.task.id);\r\n    }\r\n\r\n    render() {\r\n        let { task, title, index } = this.props\r\n        return (\r\n            <tr>\r\n                <td>{index + 1}</td>\r\n                <td>{title}</td>\r\n                <td className=\"text-center\">\r\n                    <span\r\n                        className={task.status === true ? 'label bg-success' : 'label bg-danger'}\r\n                        style={{ padding: '5px' }}\r\n                        onClick={this.onUpdateStatus}\r\n                    >\r\n                        {task.status === true ? 'Active' : 'Hide'}\r\n                    </span>\r\n                </td>\r\n                <td className=\"text-center\">\r\n                    <button type=\"button\" className=\"btn btn-warning\" onClick={this.onUpdate}>\r\n                        <span className=\"fa fa-pencil mr-3\"></span>Sửa\r\n                </button>\r\n                                    &nbsp;\r\n                <button type=\"button\" className=\"btn btn-danger\" onClick={this.onDelete}>\r\n                        <span className=\"fa fa-trash mr-3\"></span>Xóa\r\n                </button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TaskItem;","import React from 'react';\r\nimport TaskItem from './TaskItem';\r\nclass ListTable extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            filterName: '',\r\n            filterStatus: -1, // all: -1, active: 1, hidden: 0\r\n        }\r\n    }\r\n\r\n    onChange = (e) => {\r\n        let value = e.target.value;\r\n        let name = e.target.name;\r\n        // send data cho cha\r\n        this.props.onFilter(\r\n            name === 'filterName' ? value : this.state.filterName,\r\n            name === 'filterStatus' ? value : this.state.filterStatus,\r\n        )\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n        \r\n    }\r\n\r\n    render() {\r\n        let { filterName, filterStatus } = this.state;\r\n        let elm = this.props.tasks.map((data, idx) => {\r\n            return <TaskItem\r\n                key={data.id}\r\n                index={idx}\r\n                title={data.name}\r\n                task={data}\r\n                onUpdateStatus={this.props.onUpdateStatus}\r\n                onDelete={this.props.onDelete}\r\n                onUpdate={this.props.onUpdate}\r\n            />\r\n        });\r\n\r\n        return (\r\n            <div className=\"row mt-4\">\r\n                <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                    <table className=\"table table-bordered table-hover\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th className=\"text-center\">STT</th>\r\n                                <th className=\"text-center\">Tên</th>\r\n                                <th className=\"text-center\">Trạng Thái</th>\r\n                                <th className=\"text-center\">Hành Động</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td></td>\r\n                                <td>\r\n                                    <input type=\"text\" className=\"form-control\" name=\"filterName\" value={filterName} onChange={this.onChange} />\r\n                                </td>\r\n                                <td>\r\n                                    <select className=\"form-control\" name=\"filterStatus\" value={filterStatus} onChange={this.onChange}>\r\n                                        <option value=\"-1\">Tất Cả</option>\r\n                                        <option value=\"0\">Ẩn</option>\r\n                                        <option value=\"1\">Kích Hoạt</option>\r\n                                    </select>\r\n                                </td>\r\n                                <td></td>\r\n                            </tr>\r\n                            {elm}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListTable;","import React from 'react'\nimport './App.css';\nimport TaskForm from './components/TaskForm';\nimport Control from './components/Control';\nimport ListTable from './components/Table';\nimport { findIndex, filter} from 'lodash';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: [],\n      isDisplay: false,\n      taskEditing: null,\n      filterNT: {\n        name: '',\n        status: -1\n      },\n      keyWord: '',\n      sort: {\n        by: 'name',\n        value: -1\n      }\n    };\n  }\n\n  // 1 lifecircle giúp lưu data vào state khi có event load(F5)\n  // lưu data vô tasks\n  componentDidMount() {\n    if (localStorage && localStorage.getItem('tasks')) {\n      let task = JSON.parse(localStorage.getItem('tasks'));\n      this.setState({\n        tasks: task\n      });\n    }\n  }\n\n  // tao ham random string 4 ky tu thuoc he 16\n  // 0x10000 là số trong hệ 16\n  // toString(16) convert về string với base 16\n  // floor là làm tròn số nguyên && substring(1) là cắt chuỗi từ vtri 1\n  s4() {\n    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n  }\n  generateID() {\n    return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4();\n  }\n\n  // hàm hiển thị form\n  onDisplayForm = () => {\n    if (this.state.isDisplay && this.state.taskEditing !== null) {\n      this.setState({\n        isDisplay: true,\n        taskEditing: null\n      });\n    } else {\n      this.setState({\n        isDisplay: !this.state.isDisplay,\n        taskEditing: null\n      });\n    }\n  }\n\n  // hàm mở form\n  onOpenForm = () => {\n    this.setState({\n      isDisplay: true\n    })\n  }\n  // hàm đóng form\n  onCloseForm = () => {\n    this.setState({\n      isDisplay: false\n    })\n  }\n\n  // hàm clear form\n  onClear = () => {\n    this.setState({\n      id: '',\n      name: '',\n      status: false,\n      taskEditing: null\n    })\n    this.onCloseForm();\n  }\n\n  // hàm lưu data khi click btn them\n  onSubmit = (data) => {\n    let { tasks } = this.state;\n    if (data.id === '') {\n      data.id = this.generateID();\n      data.status = Boolean(data.status)\n      tasks.push(data);\n      // console.log(data);\n      // console.log(tasks);\n    } else {\n      let index = findIndex(tasks, (task) => {\n        return task.id === data.id;\n      })\n      tasks[index] = data;\n    }\n    this.setState({\n      tasks: tasks,\n      taskEditing: null\n    })\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }\n\n  onFindIndex = (id) => {\n    let { tasks } = this.state;\n    let result = -1;\n    tasks.forEach((element, idx) => {\n      if (element.id === id) {\n        result = idx;\n      }\n    });\n    return result;\n  }\n\n  // hàm update trạng thái khi click\n  onUpdateStatus = (id) => {\n    let { tasks } = this.state;\n    // let index = this.onFindIndex(id);\n    let index = findIndex(tasks, (task) =>{\n      return task.id === id;\n    })\n    if (index !== -1) {\n      tasks[index].status = !tasks[index].status;\n      this.setState({\n        tasks: tasks\n      })\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    }\n  }\n\n  // hàm xóa khi click\n  onDelete = (id) => {\n    let { tasks } = this.state;\n    let index = findIndex(tasks, (task) => {\n      return task.id === id;\n    })\n    if (index !== -1) {\n      tasks.splice(index, 1);\n      this.setState({\n        tasks: tasks\n      })\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    }\n    this.onCloseForm();\n  }\n\n  // hàm sửa data\n  onUpdate = (id) => {\n    let { tasks } = this.state;\n    let index = findIndex(tasks, (task) => {\n      return task.id === id;\n    })\n    if (index !== -1) {\n      // biến lưu data đc click vào\n      let TaskEditing = tasks[index];\n      // lưu data vào state\n      this.setState({\n        taskEditing: TaskEditing\n      }, () => {\n        // vì setState là async\n        console.log(this.state.taskEditing)\n      })\n    }\n    this.onOpenForm();\n  }\n\n  // hàm \n  onFilter = (fltN, fltS) => {\n    fltS = parseInt(fltS, 10)\n    this.setState({\n      filterNT: {\n        name: fltN,\n        status: fltS\n      }\n    });\n  }\n\n  // hàm tìm tiếm tự nghĩ\n  onSearch = (data) => {\n    // let itemS = [];\n    // let rslt = {};\n    // if (data) {\n    //   rslt = this.state.tasks.filter((task) => {\n    //     return task.name.toLowerCase().indexOf(data) !== -1;\n    //   })\n    //   // let rsltO = Object.assign({}, rslt);\n    //   // console.log(rslt);\n    //   // itemS.id = this.generateID();\n    //   itemS.push(rslt);\n    //   // console.log(itemS);\n    // }\n    // this.setState({\n    //   strS: itemS,\n    //   keyWord: data\n    // })\n    if(data){\n      this.setState({\n        keyWord : data\n      })\n    }\n  }\n\n  onSort = (data, data1) => {\n    this.setState({\n      sort: {\n        by: data,\n        value: data1\n      }\n    },() => {console.log(this.state.sort)})\n  }\n\n\n  render() {\n    const { isDisplay, filterNT, tasks, keyWord } = this.state;\n\n    let res = [ ...tasks]\n    // filter theo ten \n    if (filterNT) {\n      if (filterNT.name) {\n        res = res.filter((task) => {\n          return task.name.toLowerCase().indexOf(filterNT.name) !== -1;\n        });\n        console.log('status', filterNT)\n        if(filterNT.status !== -1){\n          res = res.filter((task) => {\n              console.log('filterNT task', task)\n            if (filterNT.status === 1 && task.status === true) {\n              return true\n            }\n            else if (filterNT.status === 0 && task.status === false) {\n              return true\n            }\n            return false\n          });\n          console.log('res sta', res)\n        }\n        \n        console.log('task,', res)\n      }\n    }\n\n    // sắp xếp theo name hoặc status\n    if (this.state.sort.by === 'name') {\n      res.sort((a, b) => {\n        if (a.name > b.name) return 1;\n        else if (a.name < b.name) return -1;\n        else return 0;\n      })\n    } else {\n      res.sort((a, b) => {\n        if (a.status > b.status) return 1;\n        else if (a.status < b.status) return -1;\n        else return 0;\n      })\n    }\n\n    // search use lib lodash\n    res = filter(res, (task) =>{\n      return task.name.toLowerCase().indexOf(keyWord.toLowerCase()) !== -1;\n    });\n\n    const taskformEl = isDisplay ? <TaskForm onClear={this.onClear} onClose={this.onCloseForm} onSubmit={this.onSubmit} taskEditing={this.state.taskEditing} /> : '';\n    return (\n      <div className=\"container\">\n        <div className=\"text-center\">\n          <h1 >Quản Lý Công Việc</h1>\n          <hr />\n        </div>\n        <div className=\"row\">\n          <div className={isDisplay ? \"col-xs-4 col-sm-4 col-md-4 col-lg-4\" : \"\"}>\n            {/* Form */}\n            {taskformEl}\n          </div>\n          <div className={isDisplay ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\" : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\"}>\n            <button type=\"button\" className=\"btn btn-primary\" onClick={this.onDisplayForm}>\n              <span className=\"fa fa-plus mr-3\"></span>Thêm Công Việc\n            </button>\n            {/* search and sort */}\n            <Control \n              onSearch={this.onSearch} \n              onSort = {this.onSort}\n              />\n            {/* List Table */}\n            <ListTable\n              tasks={res}\n              onUpdateStatus={this.onUpdateStatus}\n              onDelete={this.onDelete}\n              onUpdate={this.onUpdate}\n              onFilter={this.onFilter}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}